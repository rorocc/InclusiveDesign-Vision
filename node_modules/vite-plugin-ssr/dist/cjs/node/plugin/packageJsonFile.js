"use strict";
/*
 * We create a file `dist/server/package.json` to support ESM users.
 * Otherwise, following error is thrown:
 *   Must use import to load ES Module: dist/server/pageFiles.js
 *   require() of ES modules is not supported.
 *   require() of dist/server/pageFiles.js from node_modules/vite-plugin-ssr/dist/cjs/node/page-files/setup.js is an ES module file as it is a .js file whose nearest parent package.json contains "type": "module" which defines all .js files in that package scope as ES modules.
 * Reproduction: https://github.com/brillout/vite-plugin-ssr-server-import-syntax
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.packageJsonFile = void 0;
const utils_1 = require("../utils");
const utils_2 = require("./utils");
function packageJsonFile() {
    let ssr;
    let isEsmOutput;
    return {
        name: 'vite-plugin-ssr:packageJsonFile',
        apply: 'build',
        configResolved(config) {
            ssr = (0, utils_2.isSSR_config)(config);
            isEsmOutput = getIsEsmOutput(config);
        },
        generateBundle(_, bundle) {
            (0, utils_1.assert)([true, false].includes(ssr));
            (0, utils_1.assert)([true, null].includes(isEsmOutput));
            if (!ssr)
                return;
            const fileName = 'package.json';
            if (bundle[fileName])
                return; // E.g. already generated by Telefunc / vite-plugin-ssr
            this.emitFile({
                fileName,
                type: 'asset',
                source: getPackageJsonContent(isEsmOutput),
            });
        },
    };
}
exports.packageJsonFile = packageJsonFile;
function getPackageJsonContent(isEsmOutput) {
    if (isEsmOutput) {
        return `{ "type": "module" }`;
    }
    else {
        return `{ "type": "commonjs" }`;
    }
}
function getIsEsmOutput(config) {
    const { output } = config.build.rollupOptions;
    if (!output) {
        return null;
    }
    if (Array.isArray(output)) {
        return null;
    }
    else {
        if (output.format === 'es') {
            return true;
        }
    }
    return null;
}
