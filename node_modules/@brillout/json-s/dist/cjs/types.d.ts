export { types };
declare const types: readonly [Type<undefined, unknown>, Type<number, unknown>, Type<number, unknown>, Type<number, unknown>, Type<Date, any>, Type<BigInt, any>, Type<RegExp, any>, Type<Map<any, any>, any[]>, Type<Set<unknown>, unknown[]>, Type<string, any>];
declare type Type<T, IntermediateType> = {
    is: (val: unknown) => asserts val is T;
    match: (str: string) => boolean;
    serialize: (val: T, serializer: (val: IntermediateType) => string) => string;
    deserialize: (str: string, deserializer: (str: string) => IntermediateType) => T;
};
